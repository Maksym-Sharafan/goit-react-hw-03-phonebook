{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js","Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","handleAddContacts","className","styles","contact__form","onSubmit","this","label__form","contact__input","type","pattern","title","required","onChange","button__submit","Component","Filter","filter","filter__wrapper","filter__label","filter__input","ContactList","filteredEl","onDeleteContact","contactList","map","contact","contactList__item","contactList__button","onClick","id","App","contacts","uuidv4","find","item","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.15f31a8d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.handleAddContacts(name, number);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles.contact__form} onSubmit={this.handleSubmit}>\n        <label className={styles.label__form}>\n          Name\n          <input\n            className={styles.contact__input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.label__form}>\n          Number\n          <input\n            className={styles.contact__input}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.button__submit} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styles from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => (\n  <div className={styles.filter__wrapper}>\n    <label className={styles.filter__label}>\n      Find contacts by name\n      <input\n        className={styles.filter__input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nexport default Filter;\n","import styles from './ContactList.module.css';\n\nconst ContactList = ({ filteredEl, onDeleteContact }) => (\n  <ul className={styles.contactList}>\n    {filteredEl.map(contact => (\n      <li className={styles.contactList__item} key={contact.id}>\n        {contact.name} {contact.number}\n        <button\n          className={styles.contactList__button}\n          type=\"button\"\n          onClick={() => onDeleteContact(contact.id)}\n        >\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './Components/ContactForm';\nimport Filter from './Components/Filter';\nimport ContactList from './Components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    this.setState({ contacts: parsedContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleAddContacts = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    const coincidence = this.state.contacts.find(item => item.name === name);\n    if (coincidence) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm handleAddContacts={this.handleAddContacts} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          filteredEl={this.getVisibleContacts()}\n          contacts={this.state.contacts}\n          onDeleteContact={this.onDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__form\":\"ContactForm_contact__form__20KdD\",\"label__form\":\"ContactForm_label__form__3qxkd\",\"contact__input\":\"ContactForm_contact__input__pjMcm\",\"button__submit\":\"ContactForm_button__submit__3qXrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__wrapper\":\"Filter_filter__wrapper__dUDho\",\"filter__label\":\"Filter_filter__label__3c2Aj\",\"filter__input\":\"Filter_filter__input__3vSX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1UPhS\",\"contactList__item\":\"ContactList_contactList__item__1WtAA\",\"contactList__button\":\"ContactList_contactList__button__1HTkb\"};"],"sourceRoot":""}